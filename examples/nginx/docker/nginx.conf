# DEVELOPMENT CONFIGURATION

worker_processes auto;
worker_rlimit_nofile 65535;

# Load modules
include /etc/nginx/modules-enabled/*.conf;

events {
    multi_accept on;
    worker_connections 65535;
}

http {
    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    log_not_found off;
    types_hash_max_size 2048;
    types_hash_bucket_size 64;
    client_max_body_size 16M;

    # MIME
    include mime.types;
    default_type application/octet-stream;  

    # Logging
    access_log off;
    error_log /dev/null;

    # SSL Default Configuration
    ssl_certificate /etc/nginx/ssl/local.crt;
    ssl_certificate_key /etc/nginx/ssl/local.key;

    # Connection header for WebSocket reverse proxy
    map $http_upgrade $connection_upgrade {
        default upgrade;
        "" close;
    }

    map $remote_addr $proxy_forwarded_elem {
        # IPv4 addresses can be sent as-is
        ~^[0-9.]+$ "for=$remote_addr";

        # IPv6 addresses need to be bracketed and quoted
        ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";

        # Unix domain socket names cannot be represented in RFC 7239 syntax
        default "for=unknown";
    }

    map $http_forwarded $proxy_add_forwarded {
        # If the incoming Forwarded header is syntactically valid, append to it
        "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

        # Otherwise, replace it
        default "$proxy_forwarded_elem";
    }

    # Default server shows maintenance page for all unmatched requests
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        http2 on;

        root /usr/share/nginx/html;
        try_files /index.html =404;

        # Disable logging for default server
        access_log off;
        error_log /dev/null;
    }

    # DNS resolver for Docker internal DNS
    resolver 127.0.0.11 valid=30s;

    # HTTPS server for crm.local
    server {
        listen 80;
        http2 on;
        server_name app.localhost;

        # Add Referrer-Policy header
        add_header Referrer-Policy "no-referrer" always;

        root /var/www/app/client;
        location /_app/ {
            add_header X-Robots-Tag "noindex" always;
            add_header Cache-Control "no-cache" always;
            gzip_static on;
            try_files $uri =404;
        }

        location /_app/immutable/ {
            add_header X-Robots-Tag "noindex" always;
            add_header Cache-Control "public, immutable, max-age=31536000" always;
            gzip_static on;
            try_files $uri =404;
        }

        location / {
            root /var/www/app;
            gzip_static on;
            try_files /client$uri /prerendered$uri.html @backend;
        }

        location @backend {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 3s;

            # Try to proxy to CRM, if it fails, serve maintenance page
            proxy_intercept_errors on;
            proxy_pass "http://app:3000";

            # If proxy fails (502, 503, 504), serve maintenance page
            error_page 502 503 504 = @maintenance;
        }

        location @maintenance {
            root /usr/share/nginx/html;
            try_files /index.html =200;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
    }
}